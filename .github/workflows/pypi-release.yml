name: PyPI and GitHub Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip build

      - name: Build package
        run: |
          python -m build

      - name: Run tests
        run: |
          python -m pip install .
          pip install pytest
          pytest tests/

      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && env.PYPI_API_TOKEN != ''
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish to GitHub Packages
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          python -m pip install --upgrade pip
          pip install twine
          # Publish to GitHub Packages
          twine upload --repository-url https://pypi.pkg.github.com/${{ github.repository_owner }}/ dist/* --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --skip-existing

      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## ðŸš€ What's New in ${{ github.ref_name }}
            
            - Unified worker with resume capability
            - Multi-storage backends (GCS + Google Drive)
            - Distributed locking (Redis + file fallback)
            - Production-ready deployment (Docker + Kubernetes)
            - Comprehensive documentation and contributing guide
            - Windows compatibility fixes
            
            ## ðŸ“¦ Installation
            
            **From PyPI (recommended):**
            ```bash
            pip install dist-gcs-pdf-processing==${{ github.ref_name }}
            ```
            
            **From GitHub Packages:**
            ```bash
            pip install dist-gcs-pdf-processing==${{ github.ref_name }} --index-url https://pypi.pkg.github.com/${{ github.repository_owner }}/
            ```
            
            ## ðŸ”— Links
            - PyPI: https://pypi.org/project/dist-gcs-pdf-processing/${{ github.ref_name }}/
            - GitHub Packages: https://github.com/${{ github.repository_owner }}/dist-gcs-pdf-processing/packages
            - Documentation: See README.md
          files: |
            dist/*.whl
            dist/*.tar.gz
          draft: false
          prerelease: false 